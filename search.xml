<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Linux安装docker</title>
      <link href="/2023/08/27/jiao-cheng/linux-an-zhuang-docker/"/>
      <url>/2023/08/27/jiao-cheng/linux-an-zhuang-docker/</url>
      
        <content type="html"><![CDATA[<p>记录下docker服务的安装，目前只涉及到了centos系统，此贴会记录博主在不同系统中的docker安装教程。(其他的什么时候更新就看博主啥时候遇到了)</p><h3 id="CentOS-docker-安装"><a href="#CentOS-docker-安装" class="headerlink" title="CentOS docker 安装"></a>CentOS docker 安装</h3><h4 id="清除已安装的部分-若是新机器可跳过"><a href="#清除已安装的部分-若是新机器可跳过" class="headerlink" title="清除已安装的部分(若是新机器可跳过)"></a>清除已安装的部分(若是新机器可跳过)</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum remove <span class="token function">docker</span> <span class="token punctuation">\</span>docker-client <span class="token punctuation">\</span>docker-client-latest <span class="token punctuation">\</span>docker-common <span class="token punctuation">\</span>docker-latest <span class="token punctuation">\</span>docker-latest-logrotate <span class="token punctuation">\</span>docker-logrotate <span class="token punctuation">\</span>docker-engine<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="前置处理"><a href="#前置处理" class="headerlink" title="前置处理"></a>前置处理</h4><p>yum-complete-transaction    清理未完成事务<br>yum install -y yum-utils    安装依赖工具<br>yum clean all               清楚未完成的包和缓存<br>yum  update                 更新</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum-complete-transaction <span class="token operator">&amp;&amp;</span> yum <span class="token function">install</span> <span class="token parameter variable">-y</span> yum-utils <span class="token operator">&amp;&amp;</span> yum clean all <span class="token operator">&amp;&amp;</span> yum-complete-transaction <span class="token operator">&amp;&amp;</span> yum update<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装底层依赖"><a href="#安装底层依赖" class="headerlink" title="安装底层依赖"></a>安装底层依赖</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> <span class="token parameter variable">-y</span> device-mapper-persistent-data lvm2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="更新yum缓存"><a href="#更新yum缓存" class="headerlink" title="更新yum缓存"></a>更新yum缓存</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum makecache fast<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">yum <span class="token function">install</span> docker-ce docker-ce-cli containerd.io<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="启动docker"><a href="#启动docker" class="headerlink" title="启动docker"></a>启动docker</h4><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">systemctl start <span class="token function">docker</span> <span class="token operator">&amp;&amp;</span> systemctl status <span class="token function">docker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="测试运行docker"><a href="#测试运行docker" class="headerlink" title="测试运行docker"></a>测试运行docker</h4><p>此步会输出hello-world，输出成功即docker安装成功，就可以愉快的玩耍啦。🎉🎉</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">docker</span> run hello-world<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> docker </tag>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python生活-定时发送新闻联播到微信</title>
      <link href="/2023/07/09/yi-xie-jiao-ben/python-sheng-huo-ding-shi-fa-song-xin-wen-lian-bo-dao-wei-xin/"/>
      <url>/2023/07/09/yi-xie-jiao-ben/python-sheng-huo-ding-shi-fa-song-xin-wen-lian-bo-dao-wei-xin/</url>
      
        <content type="html"><![CDATA[<p>分享一个脚本，通过Python开发的一个新闻联播推送脚本。该项目应用场景广泛炒股的大佬们，新闻工作者，要考公的未来接班人以及需要了解国家大事的，都可以通过这个快速的获取到新闻联播信息。</p><p>免去了定时要去观看30分钟的新闻视频。直接文字输出新闻联播，一字不差。直接推送到微信邮箱(微信中的QQ邮箱提醒中绑定的邮箱)</p><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><p>项目中分为两部分第一部分通过新闻联播地址获取新闻联播的文字内容，第二部分将文字内容发送到邮箱</p><p>我们来看下关键部分获取新闻联播的文字内容</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re<span class="token keyword">import</span> requests<span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> datetime<span class="token keyword">import</span> yagmailheaders <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4651.0 Safari/537.36'</span><span class="token punctuation">&#125;</span><span class="token comment"># 获取新闻</span><span class="token keyword">def</span> <span class="token function">get_hanlder</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        rsp <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span> headers<span class="token operator">=</span>headers<span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span>        rsp<span class="token punctuation">.</span>raise_for_status<span class="token punctuation">(</span><span class="token punctuation">)</span>        rsp<span class="token punctuation">.</span>encoding <span class="token operator">=</span> rsp<span class="token punctuation">.</span>apparent_encoding        <span class="token comment"># print(rsp.text)</span>        <span class="token keyword">return</span> rsp<span class="token punctuation">.</span>text    <span class="token keyword">except</span> requests<span class="token punctuation">.</span>RequestException <span class="token keyword">as</span> error<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>error<span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">get_news</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    rsp <span class="token operator">=</span> get_hanlder<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    etr <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>rsp<span class="token punctuation">)</span>    titles <span class="token operator">=</span> etr<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//li/a/text()"</span><span class="token punctuation">)</span>    hrefs <span class="token operator">=</span> etr<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">"//li/a/@href"</span><span class="token punctuation">)</span>    news <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    summary <span class="token operator">=</span> <span class="token boolean">None</span>    <span class="token keyword">for</span> title<span class="token punctuation">,</span> href <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>titles<span class="token punctuation">,</span> hrefs<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token string">'《新闻联播》'</span> <span class="token keyword">in</span> title<span class="token punctuation">:</span>            <span class="token comment"># 获取新闻概要</span>            title_rsp <span class="token operator">=</span> get_hanlder<span class="token punctuation">(</span>href<span class="token punctuation">)</span>            summary <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r'&lt;div class="video_brief">本期节目主要内容：[\s\S]*。'</span><span class="token punctuation">,</span> title_rsp<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span>                <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&lt;/div>\n\n\n"</span>            <span class="token keyword">continue</span>        <span class="token comment"># 新闻标题去掉视频并处理成超链接  橙色 #D2691E</span>        tit <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">r"\[视频\]?"</span><span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">,</span> title<span class="token punctuation">)</span>        subtitle <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'&lt;a href=\"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>href<span class="token punctuation">&#125;</span></span><span class="token string">\" style="color:#4682B4">&lt;b></span><span class="token interpolation"><span class="token punctuation">&#123;</span>tit<span class="token punctuation">&#125;</span></span><span class="token string">&lt;/b>&lt;/a>'</span></span>        summary <span class="token operator">=</span> re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span>tit<span class="token punctuation">,</span> subtitle<span class="token punctuation">,</span> summary<span class="token punctuation">)</span>        <span class="token comment"># 获取新闻正文并添加到news</span>        news_text <span class="token operator">=</span> get_hanlder<span class="token punctuation">(</span>href<span class="token punctuation">)</span>        news_th <span class="token operator">=</span> re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">r'&lt;div class="content_area" id="content_area">.*&lt;/div>'</span><span class="token punctuation">,</span> news_text<span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        news<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>subtitle<span class="token punctuation">&#125;</span></span><span class="token string">\n</span><span class="token interpolation"><span class="token punctuation">&#123;</span>news_th<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>    news<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> summary<span class="token punctuation">)</span>    <span class="token keyword">return</span> news<span class="token keyword">def</span> <span class="token function">email_send</span><span class="token punctuation">(</span>rsp<span class="token punctuation">,</span> strdate<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 发送数据到邮箱 此处发送端为QQ邮箱</span>    yag <span class="token operator">=</span> yagmail<span class="token punctuation">.</span>SMTP<span class="token punctuation">(</span>user<span class="token operator">=</span><span class="token string">'yourQQ@qq.com'</span><span class="token punctuation">,</span> password<span class="token operator">=</span><span class="token string">'your send code'</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">'smtp.qq.com'</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">465</span><span class="token punctuation">)</span>    yag<span class="token punctuation">.</span>send<span class="token punctuation">(</span>to<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">"acceptQQ1@qq.com"</span><span class="token punctuation">,</span> <span class="token string">"acceptQQ2@qq.com"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> subject<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>strdate<span class="token punctuation">&#125;</span></span><span class="token string">日新闻联播推送"</span></span><span class="token punctuation">,</span> contents<span class="token operator">=</span>rsp<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'邮件已发送请查收...'</span><span class="token punctuation">)</span><span class="token comment"># event,context这两个参数不同的厂商是不同的名称，请根据厂商的示例进行修改即可</span><span class="token keyword">def</span> <span class="token function">scf_run</span><span class="token punctuation">(</span>event<span class="token punctuation">,</span> context<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 获取日期这里默认为第二天获取前一天的所以-1,若是当天获取则无需-1改为0即可</span>    strTime <span class="token operator">=</span> <span class="token punctuation">(</span>datetime<span class="token punctuation">.</span>date<span class="token punctuation">.</span>today<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> datetime<span class="token punctuation">.</span>timedelta<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strftime<span class="token punctuation">(</span><span class="token string">"%Y%m%d"</span><span class="token punctuation">)</span>    url <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f'https://tv.cctv.com/lm/xwlb/day/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>strTime<span class="token punctuation">&#125;</span></span><span class="token string">.shtml'</span></span>    news_text <span class="token operator">=</span> get_news<span class="token punctuation">(</span>url<span class="token punctuation">)</span>    email_send<span class="token punctuation">(</span>news_text<span class="token punctuation">,</span> strTime<span class="token punctuation">)</span><span class="token comment"># 若部署在云函数上请把下面这行注释掉,非云函数上不用注释</span>scf_run<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>代码释义：<br>首先将新闻联播页面通过Xpath获取我们需要获取的新闻联播的标题以及链接。再将链接和标题进行绑定循环取出并获取内容。<br>将获取的内容作为邮件的内容进行发送</p><p>tips:</p><p>1、默认调用时是获取前一天的内容，若需要获取当天的请把里面(datetime.date.today() + datetime.timedelta(-1)).strftime(“%Y%m%d”) 这段代码中的“-1”修改为“0”，若当天执行时为20:00前可能会获取不到因为当天的新闻还没出来</p><p>2、请注意修改发送者的邮箱和开启SMTP服务后的秘钥</p><h3 id="邮件展示"><a href="#邮件展示" class="headerlink" title="邮件展示"></a>邮件展示</h3><p><img src="https://im.gurl.eu.org/file/327217c814cecb814371b.png" alt="邮件展示"></p><h3 id="定时发送"><a href="#定时发送" class="headerlink" title="定时发送"></a>定时发送</h3><p>定时发送这里有两个选择，第一种就是自己有服务器，通过crontab 进行定时调用。第二种就是通过各大云厂商的云函数进行部署，设定函数触发时间即可。重要的是不需要掏服务器钱，云函数的每月免费额度以及够用了。（目前华为云的云函数是可以免费额度）</p>]]></content>
      
      
      <categories>
          
          <category> 一些脚本 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 新闻 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
